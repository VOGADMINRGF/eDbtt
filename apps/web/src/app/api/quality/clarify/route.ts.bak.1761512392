import { NextRequest, NextResponse } from "next/server";
import { runOpenAI } from "@/features/ai/providers/openai";

export const runtime = "nodejs";
export const dynamic = "force-dynamic";

/**
 * Input: { text:string }
 * Output: { ok:true, hints:{ level, region, timeframe, audience, stance, other? } }
 * – alle Felder optional; nur Vorschläge (sanft, überschreibbar)
 */
export async function POST(req: NextRequest){
  try{
    const b = await req.json().catch(()=>({}));
    const raw = String(b?.text ?? "").trim();
    if (!raw) return NextResponse.json({ ok:true, hints:{} }, { status:200 });

    const sys = `
Du bist Assistent für sanfte, optionale Präzisierungen.
Extrahiere, falls aus dem Text ableitbar:

- "level": eine von ["eu","bund","land","kommune","unsicher","other"]
- "region": string oder "bundesweit" oder "unsicher"
- "timeframe": eine von ["aktuell","12m","5y","1990","unsicher","other"]
- "audience": eine von ["buerger","unternehmen","staat","jugend","rentner","unsicher","other"]
- "stance": eine von ["pro","neutral","contra","unsicher"]

Wenn unsicher, setze "unsicher". Verwende "other" nur, wenn klarer Freitext sinnvoll ist und liefere dann unter "other" passende Strings.
Antworte **STRICT JSON**:
{ "hints": { "level":..., "region":..., "timeframe":..., "audience":..., "stance":..., "other": { ... } } }
`.trim();

    const prompt = `Text:
"""${raw.slice(0, 4000)}"""
Gib nur das JSON-Objekt zurück.`;

    const r = await runOpenAI(prompt, { json:true, system: sys, timeoutMs: 12000 });
    if (!r.ok) return NextResponse.json({ ok:true, hints:{} }, { status:200 });

    let hints:any = {};
    try {
      const parsed = JSON.parse(r.text||"{}");
      if (parsed && typeof parsed==="object" && parsed.hints) hints = parsed.hints;
    } catch {}
    return NextResponse.json({ ok:true, hints: hints||{} }, { status:200 });
  }catch(e:any){
    return NextResponse.json({ ok:true, hints:{} }, { status:200 });
  }
}
