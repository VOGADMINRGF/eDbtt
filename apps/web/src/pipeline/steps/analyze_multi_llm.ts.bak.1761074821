import type { AnalyzeResult } from "@/features/analyze/analyzeContribution"; // kompatibler Typ
import { analyzeMulti } from "@/features/ai/orchestrator_contrib";

export async function step_analyze_multi_llm(text:string, opts:{maxClaims?:number}={}): Promise<AnalyzeResult> {
  const out = await analyzeMulti({ text, maxClaims: opts.maxClaims });
  return {
    language: out.language,
    mainTopic: out.mainTopic,
    subTopics: out.subTopics,
    regionHint: out.regionHint,
    claims: out.claims,
    news: out.news,
    scoreHints: out.scoreHints,
    cta: null,
    _meta: {
      mode: out._meta.mode==="error" ? "error" : "gpt",
      errors: out._meta.mode==="error" ? ["multi-llm failed"] : null,
      tookMs: out._meta.tookMs,
      gptMs: undefined,
      gptText: null
    }
  };
}
