// apps/web/src/ui/ClarifyPanel.tsx
"use client";
import React from "react";

export type Hints = {
  level?: "eu"|"bund"|"land"|"kommune"|"unsicher"|"other";
  region?: string|"bundesweit"|"unsicher";
  timeframe?: "aktuell"|"12m"|"5y"|"1990"|"unsicher"|"other";
  audience?: "buerger"|"unternehmen"|"staat"|"jugend"|"rentner"|"unsicher"|"other";
  stance?: "pro"|"neutral"|"contra"|"unsicher";
  other?: { level?: string; region?: string; timeframe?: string; audience?: string; };
};

function Chip({
  active, onClick, children, title
}:{active?:boolean; onClick:()=>void; children:React.ReactNode; title?:string}){
  return (
    <button type="button" title={title}
      onClick={onClick}
      className={`px-3 py-1 rounded-full border text-sm
                  ${active?'bg-sky-50 border-sky-300':'hover:bg-slate-50 border-slate-200'}
                 `}>
      {children}
    </button>
  );
}

function OtherRow({label, value, onChange}:{label:string; value?:string; onChange:(v:string)=>void}){
  const [open,setOpen]=React.useState<boolean>(!!value);
  return (
    <div className="ml-2">
      <button type="button" className="px-3 py-1 rounded-full border text-sm hover:bg-slate-50"
              onClick={()=>setOpen(v=>!v)}>Sonstiges…</button>
      {open && (
        <div className="mt-2">
          <input
            className="w-full rounded-lg border p-2 text-sm"
            placeholder={label}
            value={value||""}
            onChange={e=>onChange(e.target.value)}
          />
          <div className="text-xs text-slate-500 mt-1">Freitext – nur ausfüllen, wenn hilfreich.</div>
        </div>
      )}
    </div>
  );
}

export default function ClarifyPanel({
  hints, onChange
}:{hints:Hints; onChange:(h:Hints)=>void}){
  const set = (patch: Partial<Hints>) => onChange({ ...hints, ...patch });

  return (
    <div className="space-y-4 mt-2">
      <div className="text-[13px] text-slate-600 font-medium">Schritt 2: Klären (optional)</div>
      <div className="text-xs text-slate-500 -mt-1">Je präziser, desto besser die Vorschläge. Alles freiwillig.</div>

      {/* Zuständigkeit */}
      <div className="space-y-2">
        <div className="text-xs text-slate-500">Zuständigkeit</div>
        <div className="flex flex-wrap gap-2">
          <Chip active={hints.level==="eu"} onClick={()=>set({level:"eu"})}>EU</Chip>
          <Chip active={hints.level==="bund"} onClick={()=>set({level:"bund"})}>Bund</Chip>
          <Chip active={hints.level==="land"} onClick={()=>set({level:"land"})}>Land</Chip>
          <Chip active={hints.level==="kommune"} onClick={()=>set({level:"kommune"})}>Kommune</Chip>
          <Chip active={hints.level==="unsicher"} onClick={()=>set({level:"unsicher"})}>Unsicher</Chip>
          <OtherRow label="Zuständigkeit (frei)" value={hints.other?.level}
                    onChange={(v)=>set({level:"other", other:{...(hints.other||{}), level:v}})} />
        </div>
      </div>

      {/* Ort/Region */}
      <div className="space-y-2">
        <div className="text-xs text-slate-500">Ort/Region</div>
        <div className="flex flex-wrap gap-2">
          <Chip active={hints.region==="bundesweit"} onClick={()=>set({region:"bundesweit"})}>Bundesweit</Chip>
          <Chip active={!!(hints.region && hints.region!=="unsicher" && hints.region!=="bundesweit")}
                onClick={()=>{ /* toggled by input below */ }}>Stadt/Region…</Chip>
          <Chip active={hints.region==="unsicher"} onClick={()=>set({region:"unsicher"})}>Unsicher</Chip>
        </div>
        <div className="ml-2">
          <input
            className="w-full rounded-lg border p-2 text-sm"
            placeholder="z. B. Berlin, Neukölln (optional)"
            value={(typeof hints.region==="string" && hints.region!=="bundesweit" && hints.region!=="unsicher") ? String(hints.region) : ""}
            onChange={(e)=>set({region:e.target.value||undefined})}
          />
        </div>
      </div>

      {/* Zeitraum */}
      <div className="space-y-2">
        <div className="text-xs text-slate-500">Zeitraum</div>
        <div className="flex flex-wrap gap-2">
          <Chip active={hints.timeframe==="aktuell"} onClick={()=>set({timeframe:"aktuell"})}>Aktuell</Chip>
          <Chip active={hints.timeframe==="12m"} onClick={()=>set({timeframe:"12m"})}>Letzte 12 Monate</Chip>
          <Chip active={hints.timeframe==="5y"} onClick={()=>set({timeframe:"5y"})}>Letzte 5 Jahre</Chip>
          <Chip active={hints.timeframe==="1990"} onClick={()=>set({timeframe:"1990"})}>Seit 1990</Chip>
          <Chip active={hints.timeframe==="unsicher"} onClick={()=>set({timeframe:"unsicher"})}>Unsicher</Chip>
          <OtherRow label="Zeitraum (frei)" value={hints.other?.timeframe}
                    onChange={(v)=>set({timeframe:"other", other:{...(hints.other||{}), timeframe:v}})} />
        </div>
      </div>

      {/* Betroffene */}
      <div className="space-y-2">
        <div className="text-xs text-slate-500">Betroffene</div>
        <div className="flex flex-wrap gap-2">
          <Chip active={hints.audience==="buerger"} onClick={()=>set({audience:"buerger"})}>Bürger*innen</Chip>
          <Chip active={hints.audience==="unternehmen"} onClick={()=>set({audience:"unternehmen"})}>Unternehmen</Chip>
          <Chip active={hints.audience==="staat"} onClick={()=>set({audience:"staat"})}>Staat/Verwaltung</Chip>
          <Chip active={hints.audience==="jugend"} onClick={()=>set({audience:"jugend"})}>Kinder/Jugendliche</Chip>
          <Chip active={hints.audience==="rentner"} onClick={()=>set({audience:"rentner"})}>Rentner*innen</Chip>
          <Chip active={hints.audience==="unsicher"} onClick={()=>set({audience:"unsicher"})}>Unsicher</Chip>
          <OtherRow label="Betroffene (frei)" value={hints.other?.audience}
                    onChange={(v)=>set({audience:"other", other:{...(hints.other||{}), audience:v}})} />
        </div>
      </div>

      {/* Haltung – für Tonalität später */}
      <div className="space-y-2">
        <div className="text-xs text-slate-500">Haltung (optional)</div>
        <div className="flex flex-wrap gap-2">
          <Chip active={hints.stance==="pro"} onClick={()=>set({stance:"pro"})}>Pro</Chip>
          <Chip active={hints.stance==="neutral"} onClick={()=>set({stance:"neutral"})}>Neutral</Chip>
          <Chip active={hints.stance==="contra"} onClick={()=>set({stance:"contra"})}>Contra</Chip>
          <Chip active={hints.stance==="unsicher"} onClick={()=>set({stance:"unsicher"})}>Unsicher</Chip>
        </div>
      </div>
    </div>
  );
}
