"use client";
import React from "react";

type Hints = {
  level?: string|string[];
  region?: string|string[];
  timeframe?: string|string[];
  audience?: string|string[];
  stance?: string|string[];
  other?: any;
};
function arr(v:any){ return Array.isArray(v)? v : (v==null? [] : [v]); }
function has(a:string[],v:string){ return a.includes(v); }
function toggle(a:string[],v:string){ return has(a,v)? a.filter(x=>x!==v) : [...a, v]; }

export default function ClarifyPanel({ value, onChange }:{ value:Hints; onChange:(v:Hints)=>void }){
  const [levels, setLevels] = React.useState<string[]>(arr(value?.level));
  const [regions,setRegions]= React.useState<string[]>(arr(value?.region));
  const [tfs, setTfs]       = React.useState<string[]>(arr(value?.timeframe));
  const [aud, setAud]       = React.useState<string[]>(arr(value?.audience));
  const [st, setSt]         = React.useState<string[]>(arr(value?.stance));
  const [other,setOther]    = React.useState<string>(value?.other?.free || "");

  React.useEffect(()=>{
    onChange({
      level: levels, region: regions, timeframe: tfs, audience: aud, stance: st,
      other: { ...(value?.other||{}), free: other }
    });
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [levels, regions, tfs, aud, st, other]);

  const Chip = ({label,active,onClick}:{label:string;active:boolean;onClick:()=>void})=>(
    <button className={"vog-chip "+(active? "ring-2 ring-sky-400":"")} onClick={onClick}>{label}</button>
  );

  return (
    <div className="space-y-3">
      <div>
        <div className="text-xs text-slate-500 mb-1">Ebene/Zuständigkeit (Mehrfach möglich)</div>
        <div className="flex flex-wrap gap-2">
          {["EU","Bund","Land","Kommune"].map(l=>(
            <Chip key={l} label={l} active={has(levels,l.toLowerCase())} onClick={()=> setLevels(toggle(levels, l.toLowerCase()))}/>
          ))}
          <Chip label={"Unsicher"} active={has(levels,"unsicher")} onClick={()=> setLevels(toggle(levels,"unsicher"))}/>
          <Chip label={"Sonstiges…"} active={false} onClick={()=> setOther(other)}/>
        </div>
      </div>

      <div>
        <div className="text-xs text-slate-500 mb-1">Ort/Region (Mehrfach möglich)</div>
        <div className="flex flex-wrap gap-2">
          <Chip label={"Bundesweit"} active={has(regions,"bundesweit")} onClick={()=> setRegions(toggle(regions,"bundesweit"))}/>
          <Chip label={"Stadt/Region…"} active={false} onClick={()=> {
            const r = prompt("Stadt/Region angeben:"); if(r && r.trim()) setRegions([...regions, r.trim()]);
          }}/>
          <Chip label={"Unsicher"} active={has(regions,"unsicher")} onClick={()=> setRegions(toggle(regions,"unsicher"))}/>
        </div>
      </div>

      <div>
        <div className="text-xs text-slate-500 mb-1">Zeitraum</div>
        <div className="flex flex-wrap gap-2">
          {[
            ["Aktuell","aktuell"],["Letzte 12 Monate","letzte_12m"],["Letzte 5 Jahre","letzte_5y"],["Seit 1990","seit_1990"],["Unsicher","unsicher"]
          ].map(([l,v])=>(
            <Chip key={v} label={l} active={has(tfs,v)} onClick={()=> setTfs(toggle(tfs, v))}/>
          ))}
        </div>
      </div>

      <div>
        <div className="text-xs text-slate-500 mb-1">Betroffene</div>
        <div className="flex flex-wrap gap-2">
          {[
            ["Bürger*innen","buerger"],["Unternehmen","unternehmen"],["Staat/Verwaltung","staat"],["Kinder/Jugendliche","jugend"],["Rentner*innen","senioren"],["Unsicher","unsicher"]
          ].map(([l,v])=>(
            <Chip key={v} label={l} active={has(aud,v)} onClick={()=> setAud(toggle(aud, v))}/>
          ))}
        </div>
      </div>

      <div>
        <div className="text-xs text-slate-500 mb-1">Haltung (optional)</div>
        <div className="flex flex-wrap gap-2">
          {[
            ["Pro","pro"],["Neutral","neutral"],["Contra","contra"],["Unsicher","unsicher"]
          ].map(([l,v])=>(
            <Chip key={v} label={l} active={has(st,v)} onClick={()=> setSt(toggle(st, v))}/>
          ))}
        </div>
      </div>

      <div>
        <div className="text-xs text-slate-500 mb-1">Sonstiges (Freitext)</div>
        <input className="w-full border rounded-xl p-2 text-sm" placeholder="Optional ergänzen …"
          value={other} onChange={e=> setOther(e.target.value)} />
      </div>
    </div>
  );
}
